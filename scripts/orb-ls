#!/usr/bin/python
# *-* coding: utf-8 *-*
# Author: Thomas Martin <thomas.martin.1@ulaval.ca>
# File: orb-ls

## Copyright (c) 2010-2014 Thomas Martin <thomas.martin.1@ulaval.ca>
## 
## This file is part of ORB
##
## ORB is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## ORB is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
## License for more details.
##
## You should have received a copy of the GNU General Public License
## along with ORB.  If not, see <http://www.gnu.org/licenses/>.

#############################################
############ LS script ######################
#############################################

# This script helps the user to manipulate the header of a frame. 

import os, sys
import orb.core
from orb.core import Tools
import argparse
from argparse import ArgumentParser
import warnings


def main(args):
    
    warnings.filterwarnings(
                'ignore', message='Overwriting existing file.*',
                module='astropy.io.*')

    oldstdout = sys.stdout
    sys.stdout = None
    
    to = Tools(no_log=True, silent=True)

    def reject_file(path):
        try:
            hdr = to.read_fits(path, return_hdu_only=True)[
                args.hdu_index].header
        except Exception:
            return True
        
        reject = False
        if args.fkey is not None:
            if args.fkey[0] in hdr:
                if str(hdr[args.fkey[0]]).strip() != args.fkey[1].strip(): reject = True
            else: reject = True

        if args.fobject is not None:
            if 'OBJECT' in hdr:
                if str(hdr['OBJECT']).strip() != args.fobject.strip(): reject = True
            else: reject = True

        if args.fstep is not None:
            if 'SITSTEP' in hdr:
                if len(args.fstep) == 1:
                    if int(hdr['SITSTEP']) != args.fstep[0]: reject = True
                elif len(args.fstep) == 2:
                    if (int(hdr['SITSTEP']) < args.fstep[0]
                        or int(hdr['SITSTEP']) > args.fstep[1]): reject = True
                else: raise Exception('step argument must have 1 or 2 parameters')
            else: reject = True
        return reject

    
    
    for path in args.fits_path:
        if not reject_file(path) :
            sys.stdout = oldstdout
            print path
            sys.stdout = None
        
       
if __name__ == "__main__":

    parser = ArgumentParser(version=('ORB-version {}'.format(
                              orb.core.__version__)),
                            description=
                            "Generate a list of FITS files (more or less like 'ls') with specific filtering options.")

    parser.add_argument('fits_path', help='Fits path', nargs='*')


    filters = parser.add_argument_group('filters', 'Filters')
    
    filters.add_argument('-o', dest='fobject', default=None,
                         help='Filter by object name')

    filters.add_argument('-s', dest='fstep', default=None, nargs='+',
                         type=int,
                         help='Filter by step number. If one number is given, only the given step is kept. If two numbers are given they are considered as min and max steps')
    filters.add_argument('-k', dest='fkey', default=None, nargs=2,
                         help='Generic filter by key value')

    

    misc = parser.add_argument_group('misc', 'Miscellaneous')
    misc.add_argument('-i', dest="hdu_index", default=0, type=int,
                      help="Change HDU index")
    

    
    if len(sys.argv) < 2:
        parser.print_usage()
        sys.exit(2)
        
    args=parser.parse_args()

   

    
    
    main(args)

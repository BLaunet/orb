#!/usr/bin/python
# *-* coding: utf-8 *-*
# Author: Thomas Martin <thomas.martin.1@ulaval.ca>
# File: orb-bin

## Copyright (c) 2010-2015 Thomas Martin <thomas.martin.1@ulaval.ca>
## 
## This file is part of ORB
##
## ORB is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## ORB is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
## License for more details.
##
## You should have received a copy of the GNU General Public License
## along with ORB.  If not, see <http://www.gnu.org/licenses/>.

#############################################
############ BIN script #####################
#############################################

# bin a list of frames. 


import os, sys
import argparse
from argparse import ArgumentParser
import orb
from orb.core import Tools

to = Tools(no_log=True)

def main(args):

    if args.bin_factor < 2: raise Exception('Bin factor must be an integer > 1')

    path = args.list_path
    with open(path, 'r') as f:
        for line in f:
            line = line.strip()        
            if 'fits' in line:
                data, hdr = to.read_fits(line, return_header=True)
                data = to._bin_image(data, args.bin_factor)
                filename, ext = os.path.splitext(line)
                new_filename = filename + '.bin{}'.format(args.bin_factor) + ext
                
                to.write_fits(new_filename, data,
                              fits_header=hdr, overwrite=True)


if __name__ == "__main__":

    parser = ArgumentParser(version=('ORB-version {}'.format(
                              orb.core.__version__)),
                            description=
                            "Bin a list of FITS images.\n Binned images are saved with the extension *.binN.fits (N is the binning factor).")


    parser.add_argument('bin_factor', help='Binning factor', type=int)
    
    parser.add_argument('list_path', help='Path to a list of FITS files')


    args=parser.parse_args()
    
    main(args)

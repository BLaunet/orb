#!/usr/bin/python
# *-* coding: utf-8 *-*
# Author: Thomas Martin <thomas.martin.1@ulaval.ca>
# File: orb-conf

## Copyright (c) 2010-2016 Thomas Martin <thomas.martin.1@ulaval.ca>
## 
## This file is part of ORB
##
## ORB is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## ORB is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
## License for more details.
##
## You should have received a copy of the GNU General Public License
## along with ORB.  If not, see <http://www.gnu.org/licenses/>.

#############################################
############ CONF script ####################
#############################################

# This script helps the user to configure ORB.

import os, sys
import getopt
from orb.core import Tools

# Defining the path to ORBS module from script location
script_path = os.path.dirname(os.path.realpath(__file__)).split()
orb_path = os.path.normpath(('%s'%os.sep).join(str(script_path[0]).split(os.sep)[:-1]))

def usage(): 
    print """usage: orb-conf [OPTION]
    
    Change ORB configuration.

    Note that this function may require write rights on ORB
    installation folder.

    -i instrument: Change instrument configuration. Can be sitelle or
       spiomm.
    """
  
    sys.exit(2)

def main():

    to = Tools(no_log=True)

    instruments = ('spiomm', 'sitelle')
 
    try:
        opts, args = getopt.getopt(sys.argv[1:], "i:", [])
    except getopt.GetoptError, err:
        print str(err)
        usage()

    if len(opts) == 0:
        usage()
        
    #################
    # Check options #
    #################
    
    for opt, arg in opts:
        
        if opt in ('-i'):
            if arg in instruments:
                data_path = orb_path +os.sep + 'orb' + os.sep + 'data' + os.sep
                base_config_file_path = data_path + 'config.orb'
                config_file_path = data_path + 'config.{}.orb'.format(arg)

                if os.system('rm ' + base_config_file_path) == 0:
                    if os.system('ln -s ' + config_file_path + ' '
                                 + base_config_file_path) == 0:
                        to._print_msg(
                            'Instrument configuration changed to: {}'.format(
                                arg))
                    else:
                        to._print_error('Instrument configuration could not be changed. Check if you have the requested rights.')
                else:
                    to._print_error('Instrument configuration could not be changed. Check if you have the requested rights.')
            else:
                to._print_warning('{} instrument unknown. Please try: {}'.format(arg, instruments))
    
       
if __name__ == "__main__":
    main()

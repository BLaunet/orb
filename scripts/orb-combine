#!/usr/bin/env python
# *-* coding: utf-8 *-*
# Author: Thomas Martin <thomas.martin.1@ulaval.ca>
# File: combine

## Copyright (c) 2010-2016 Thomas Martin <thomas.martin.1@ulaval.ca>
## 
## This file is part of ORB
##
## ORB is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## ORB is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
## License for more details.
##
## You should have received a copy of the GNU General Public License
## along with ORB.  If not, see <http://www.gnu.org/licenses/>.

#############################################
############ COMBINE script ##################
#############################################

# This script helps the user to combine an hdf5 cube and create a deep
# frame or an energy map.

import os, sys
from orb.core import HDFCube
import orb
import argparse
from argparse import ArgumentParser


def usage(): 
    print """usage: orb-combine HDF5_CUBE IMAGE_NAME
    
    Combine an hdf5 cube in one frame.
    
    Frames must have the same shape."""
  
    sys.exit(2)

def main(args):

    if os.path.exists(args.hdf5_path):
        cube = HDFCube(args.hdf5_path)
        if args.type == 'deep':
            im = cube.get_mean_image(recompute=True)
        elif args.type == 'interf-energy':
            im = cube.get_interf_energy_map(recompute=True)
        elif args.type == 'spectrum-energy':
            im = cube.get_spectrum_energy_map(recompute=True)
            
        cube.write_fits(args.out_path, im, overwrite=False,
                        fits_header=cube.get_cube_header())
    else:
        print "The list file does not exist"
       
if __name__ == "__main__":

    parser = ArgumentParser(
        version=('ORB-version {}'.format(
            orb.core.__version__)),
        description="Combine an HDF5 cube and create a deep frame (by default) or an energy map (use option --energy).")
    
    parser.add_argument('hdf5_path',
                        help='Path to the HDF5 cube')
    parser.add_argument('out_path',
                        help='Path to the output file (FITS format)')
    parser.add_argument('--type', dest="type",
                        default='deep', choices=['deep', 'interf-energy', 'spectrum-energy'],
                        help="Choose the combined frame type: a deep frame ('deep'), an energy map of an interferometric cube ('interf-energy') or an energy map of a spectral cube ('spectrum-energy')")
    
    args = parser.parse_args()

    main(args)
